/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tablet;

import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author aluno
 */
public class Jogos extends javax.swing.JFrame {

    /**
     * Creates new form Jogos
     */
    public Jogos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        caixaDeTexto = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        botaoEscolher = new javax.swing.JButton();
        botaoEscolher1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1024, 720));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(1024, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 720));
        getContentPane().setLayout(null);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/teste uno.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(130, 170, 250, 150);

        caixaDeTexto.setEditable(false);
        caixaDeTexto.setColumns(20);
        caixaDeTexto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        caixaDeTexto.setRows(5);
        caixaDeTexto.setWrapStyleWord(true);
        caixaDeTexto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(caixaDeTexto);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(480, 20, 490, 560);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/imobiliario.jpeg"))); // NOI18N
        jLabel3.setText("jLabel2");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3);
        jLabel3.setBounds(130, 340, 250, 160);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/jogodavida.jpg"))); // NOI18N
        jLabel4.setText("jLabel2");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel4);
        jLabel4.setBounds(130, 520, 250, 150);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/zombicide.jpg"))); // NOI18N
        jLabel5.setText("jLabel2");
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5);
        jLabel5.setBounds(130, 10, 250, 150);

        botaoEscolher.setBackground(new java.awt.Color(255, 102, 51));
        botaoEscolher.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        botaoEscolher.setForeground(new java.awt.Color(255, 255, 255));
        botaoEscolher.setText("Voltar");
        botaoEscolher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEscolherActionPerformed(evt);
            }
        });
        getContentPane().add(botaoEscolher);
        botaoEscolher.setBounds(770, 610, 190, 50);

        botaoEscolher1.setBackground(new java.awt.Color(255, 102, 51));
        botaoEscolher1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        botaoEscolher1.setForeground(new java.awt.Color(255, 255, 255));
        botaoEscolher1.setText("Escolher");
        botaoEscolher1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEscolher1ActionPerformed(evt);
            }
        });
        getContentPane().add(botaoEscolher1);
        botaoEscolher1.setBounds(490, 610, 250, 50);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        
        jogoEscolhido = 1;
        String conteudo = "Objetivo: Ser o primeiro jogador na ficar sem cartas na mão," + 
                  "\nutilizando todos os meios possíveis para impedir que os outros "
                + "\njogadores façam o mesmo.\n\n"
                + "Como jogar: Cada jogador recebe 7 cartas. O restante do baralho"
                + "\né deixado na mesa com a face virada para baixo e então vira-se"
                + "\numa carta do monte. Esta carta que fica em cima da mesa"
                + "\nserve como base para que o jogo comece.";
        caixaDeTexto.setText(conteudo);
        caixaDeTexto.setCaretPosition(0);
        
    }//GEN-LAST:event_jLabel2MouseClicked

    private void botaoEscolherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEscolherActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_botaoEscolherActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        jogoEscolhido = 2;
        String conteudo = "Objetivo: Zombicide é um jogo cooperativo onde os jogadores\n" +
        "enfrentam uma horda de Zumbis controlados pelo próprio jogo.\n" +
        "Cada jogador controla um, dois, três ou quatro Sobreviventes de\n" +
        "uma Infecção Zumbi. O objetivo é simplesmente completar as\n" +
        "Missões e permanecer vivo para ver o dia seguinte amanhecer" +
                
        "\n\nZombicide é jogado em uma série de turnos, compostos por:\n\n" +
                
        "FASE DOS JOGADORES: \n" +
        "O jogador com a ficha de “jogador inicial” inicia a fase, ativando\n" +
        "seus sobreviventes, um por vez, na ordem escolhida por ele.\n" +
        "Cada sobrevivente pode, a princípio, realizar três ações por\n" +
        "turno, porém algumas Habilidades permitem que ele realize\n" +
        "ações extras no decorrer do jogo. Os Sobreviventes utilizam\n" +
        "suas ações para matar Zumbis, se mover pelo tabuleiro e realizar\n" +
        "outras tarefas que ajudem a concluir os diversos objetivos\n" +
        "de cada Missão." +
        "\n\nFASE DOS ZUMBIS: \n" +
        "Todos os zumbis no tabuleiro são ativados e gastam uma ação,\n" +
        "seja atacando um Sobrevivente que está próximo ou, caso não\n" +
        "tenham ninguém para atacar, movendo em direção ao Sobrevivente\n" +
        "que conseguem ver ou, se não enxergam nenhum Sobrevivente,\n" +
        "se movendo em direção à zona mais barulhenta. Os\n" +
        "Corredores possuem duas ações, então eles podem atacar duas\n" +
        "vezes, atacar e mover, mover e atacar ou mover duas vezes.\n"
        + "\nFASE FINAL: \n" +
        "Todos as fichas de barulho são removidas do tabuleiro, e a ficha\n" +
        "de “jogador inicial” é passada ao jogador à esquerda do atual\n" +
        "jogador inicial. Mais um turno do jogo está pronto para começar";
        caixaDeTexto.setText(conteudo);
        caixaDeTexto.setCaretPosition(0);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        
        jogoEscolhido = 3;
        String conteudo = "Quantidade de Jogadores: 2 a 6.\n"
                + "\nOs jogadores escolhem a cor de seus piões, colocando-os no \n"
                + "ponto de partida. Daí, é só embaralhar as cartas de Sorte e \n"
                + "Revés e colocar o bolinho de cabeça para baixo no local indicado, \n"
                + "no centro do tabuleiro. Em seguida, é hora de distribuir o \"dinheirinho\":\n"
                + "8 notas de R$ 1, 10 de R$ 5, 10 de R$ 10, 10 de R$ 50, 8 de R$ 100\n"
                + "e 2 notas de R$ 500. O restante volta para o banco. \n\n"
                + "Somente uma pessoa pode ser o banqueiro e, se quiser jogar, \n"
                + "terá que tomar cuidado para não misturar as notas recebidas "
                + "\ncom as do banco.\n\n"
                + "O funcionamento do jogo é simples: cada um joga o dado em sua vez,\n"
                + "percorre o número de casas determinado pelo resultado e cumpre\n"
                + "as ordens da casa em que cair. Ah, quem tirar uma dupla (2 e 2,\n"
                + "3 e 3 e assim por diante) pode jogar novamente. A cada volta"
                + "\ncompleta, ganha R$ 200 como honorários.\n" +
                "\n" +
                "Ao cair em um terreno ou empresa, poderá comprá-los do banqueiro,\n"
                + "pagando o preço indicado no tabuleiro. A partir daí, começam\n"
                + "a surgir as surpresas! Você tem que pagar impostos, lucrar, \n"
                + "tirar cartas Sorte e Revés e até ir para a prisão.";
        caixaDeTexto.setText(conteudo);
        caixaDeTexto.setCaretPosition(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        jogoEscolhido = 4;
        String conteudo = "Quantidade de Jogadores: 2 a 6\n\n" + 
                "A primeira etapa para aprender como jogar o Jogo da Vida e iniciar\n"
                + "a partida é a distribuição de pinos. Um dos jogadores representará\n"
                + "o banqueiro e fará a distribuição para cada jogador de um carro"
                + "\ncom um pino azul e outro rosa, uma nota de R$ 1.000, cinco \n"
                + "de R$ 5.000 e um cartão de riqueza, que deverá ficar no topo \n"
                + "da pilha.\n" +
                "\n" +
                "Após isso, os jogadores devem girar a roleta e quem sair com o \n"
                + "maior número começa. Se houver empate, esse processo deverá ser \n"
                + "repetido. Então, o primeiro a jogar coloca o carro no espaço \n"
                + "descrito como “saída” e escolhe qual caminho seguir.\n" +
                "\n" +
                "Depois, deve girar a roleta novamente e o número que sair indica\n"
                + "o número de casas que andará. Se a casa que parar já estiver \n"
                + "ocupada, o carro deve ser colocado na próxima lacuna.\n\n" +
                "Toda vez que um jogador passar ou parar nas casas brancas que \n"
                + "indicarem uma oferta de apólice de seguro ou ações, esse jogador\n"
                + "poderá comprá-las. No entanto, cada participante só pode ter \n"
                + "apenas uma ação ou uma apólice de seguro.\n" +
                "\n" +
                "Quando o carro de um participante parar na casa que indica o dia\n"
                + "de pagamento, o jogador recebe o salário e também um cartão de\n"
                + "riqueza do topo da pilha.\n" +
                "Todos os participantes devem parar na casa ao lado do desenho da \n"
                + "igreja que indica “dia do seu casamento”. Nessa situação, se o\n"
                + "seu pino for azul, deverá incluir o pino rosa ou vice e versa.\n" +
                "\n" +
                "Feito isso, você deve girar a roleta para definir os presentes de\n"
                + "casamento. Caso o número que tirar na roleta seja 1,2 ou 3, "
                + "\nvocê receberá R$ 2.000 de cada jogador. Em números 4,5 ou 6,\n"
                + "receberá R$ 1.000. Entretanto, caso sorteie os números 7,8,9 ou 10,\n"
                + "não receberá nada de presente.\n" +
                "\n" +
                "Para avançar mais casas, o jogador que acabou de casar deve se \n"
                + "direcionar para a casa descrita como “lua-de-mel” e girar a roleta\n"
                + "para saber quantas casas avançar.\n\n" +
                "Quando um participante parar na casa que indica o nascimento de\n"
                + "um filho, deve acrescentar um pino azul ou rosa e receber R$1.000\n"
                + "de cada jogador. Em caso de gêmeos, receberá o dobro.\n" +
                "Sempre que um jogador parar na casa “dia de sorte”, o banqueiro \n"
                + "deve liberar R$ 20.000. No caso da casa “vingança”, há duas opções:\n"
                + "receber R$ 20.00 de cada adversário ou obrigá-los a voltar 10\n"
                + "casas. No entanto, o jogador que estiver na lacuna “milionário”\n"
                + "não pode receber a vingança.";
        caixaDeTexto.setText(conteudo);
        caixaDeTexto.setCaretPosition(0);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void botaoEscolher1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEscolher1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoEscolher1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jogos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jogos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEscolher;
    private javax.swing.JButton botaoEscolher1;
    private javax.swing.JTextArea caixaDeTexto;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private int jogoEscolhido = 0;

    public int getJogoEscolhido() {
        return jogoEscolhido;
    }

    public void setJogoEscolhido(int jogoEscolhido) {
        this.jogoEscolhido = jogoEscolhido;
    }
}
